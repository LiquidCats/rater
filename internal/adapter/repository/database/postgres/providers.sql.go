// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: providers.sql

package postgres

import (
	"context"
)

const getAllProviders = `-- name: GetAllProviders :many
select name, created_at from providers
`

func (q *Queries) GetAllProviders(ctx context.Context) ([]Provider, error) {
	rows, err := q.db.Query(ctx, getAllProviders)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Provider
	for rows.Next() {
		var i Provider
		if err := rows.Scan(&i.Name, &i.CreatedAt); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getProvider = `-- name: GetProvider :one
select name, created_at from providers where name = $1
`

func (q *Queries) GetProvider(ctx context.Context, name string) (Provider, error) {
	row := q.db.QueryRow(ctx, getProvider, name)
	var i Provider
	err := row.Scan(&i.Name, &i.CreatedAt)
	return i, err
}
